<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 12 (filtered)">
<title>G# Overview</title>
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:"Cambria Math";
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Cambria;
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:10.0pt;
	margin-left:0cm;
	line-height:115%;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
h1
	{mso-style-link:"Heading 1 Char";
	margin-top:24.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:115%;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Cambria","serif";
	color:#365F91;}
h2
	{mso-style-link:"Heading 2 Char";
	margin-top:12.0pt;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	line-height:115%;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Cambria","serif";
	font-style:italic;}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{mso-style-link:"Balloon Text Char";
	margin:0cm;
	margin-bottom:.0001pt;
	font-size:8.0pt;
	font-family:"Tahoma","sans-serif";}
span.Heading1Char
	{mso-style-name:"Heading 1 Char";
	mso-style-link:"Heading 1";
	font-family:"Cambria","serif";
	color:#365F91;
	font-weight:bold;}
span.Heading2Char
	{mso-style-name:"Heading 2 Char";
	mso-style-link:"Heading 2";
	font-family:"Cambria","serif";
	font-weight:bold;
	font-style:italic;}
span.BalloonTextChar
	{mso-style-name:"Balloon Text Char";
	mso-style-link:"Balloon Text";
	font-family:"Tahoma","sans-serif";}
p.msopapdefault, li.msopapdefault, div.msopapdefault
	{mso-style-name:msopapdefault;
	margin-right:0cm;
	margin-bottom:10.0pt;
	margin-left:0cm;
	line-height:115%;
	font-size:12.0pt;
	font-family:"Times New Roman","serif";}
p.msochpdefault, li.msochpdefault, div.msochpdefault
	{mso-style-name:msochpdefault;
	margin-right:0cm;
	margin-left:0cm;
	font-size:10.0pt;
	font-family:"Times New Roman","serif";}
.MsoChpDefault
	{font-size:10.0pt;}
@page Section1
	{size:595.3pt 841.9pt;
	margin:70.85pt 70.85pt 70.85pt 70.85pt;}
div.Section1
	{page:Section1;}
 /* List Definitions */
 ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>

</head>

<body lang=SV link=blue vlink=purple>

<div class=Section1>

<p class=MsoNormal><b><span lang=EN-US style='font-size:18.0pt;line-height:
115%;font-family:"Times New Roman","serif"'>Overview</span></b></p>

<h1 style='margin-top:0cm'><span lang=EN-US style='color:black'>Fundamental
Requirements</span></h1>

<p class=MsoNormal><span lang=EN-US>An object-oriented language must fulfill
the four fundamentals:</span></p>

<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
     lang=EN-US>Abstraction</span></li>
 <li class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
     lang=EN-US>Encapsulation</span></li>
 <li class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
     lang=EN-US>Inheritance</span></li>
 <li class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
     lang=EN-US>Polymorphism</span></li>
</ul>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:36.0pt;margin-bottom:.0001pt'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
lang=EN-US>In the 1990’s a new era of object-oriented languages was introduces
as C# and Java was released. They have much simpler syntax and memory
management than the preceding language C++.&nbsp; The G# framework has taken a
lot of inspiration from C# and Java and therefore has the following additional
requirements:</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
lang=EN-US>&nbsp;</span></p>

<ul style='margin-top:0cm' type=disc>
 <li class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
     lang=EN-US>A common root object for all classes, called G#Object.</span></li>
 <li class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
     lang=EN-US>Garbage Collector, objects don’t need to be destroyed
     explicitly.</span></li>
 <li class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
     lang=EN-US>Interface support, instead of supporting multiple inheritance.</span></li>
 <li class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
     lang=EN-US>Abstract methods and abstract classes.</span></li>
 <li class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
     lang=EN-US>Use native LabVIEW objects in combination with the new data
     value reference in LV2009.</span></li>
 <li class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
     lang=EN-US>Include support to keep objects alive and avoid LabVIEW garbage
     collection.</span></li>
 <li class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
     lang=EN-US>Support for static classes and class attributes.</span></li>
 <li class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
     lang=EN-US>Named objects with user counter.</span></li>
 <li class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
     lang=EN-US>Serialization of objects.</span></li>
 <li class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
     lang=EN-US>G# events that can be traced.</span></li>
 <li class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
     lang=EN-US>Desktop Trace Execution Toolkit events support.</span></li>
 <li class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
     lang=EN-US>Include as few utility methods in a class as possible.</span></li>
 <li class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
     lang=EN-US>Powerful debugger option with possibility to probe attributes,
     log events and also offer an active debug possibility.</span></li>
</ul>

<h1><span lang=EN-US style='color:black'>G# Architecture</span></h1>

<p class=MsoNormal><span lang=EN-US>The G# is the first LabVIEW object-oriented
toolkit that really uses the mechanism of the dynamic dispatch together with
the data value reference. All previously object-oriented toolkits have used
some kind of common implementation in the bottom. There has been code in the
classes calling the common code to create and delete objects, accessing
attributes etc. However, this caused the use of a lot of unique utility VIs in
all the classes.</span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
lang=EN-US>The G# Framework has used a different approached very much inspired
by the <i><a href="http://en.wikipedia.org/wiki/Hollywood_Principle"
target="_blank">Hollywood Principle</a></i> (“Don’t call us, we call you” also
known as “Inversion of Control”). This means that as much as possible of the
execution flow takes place in the root G#Object code and calling code in the
classes by dynamic dispatch calls.</span></p>

<p class=MsoNormal><img border=0 width=595 height=450
src="Overview_files/image001.jpg"></p>

<h2><span lang=EN-US style='font-style:normal'>External Create Process</span></h2>

<p class=MsoNormal><span lang=EN-US>The G# Framework also have a built-in
background process called “External Create Process”, if this is started, it
will create and own all objects created, and also be possible to execute the
default constructor and a special methods called “Open”. This way objects and
its resources will not be garbage collected by LabVIEW until this process it
stopped (by the Garbage Collector).</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

</div>

</body>

</html>
